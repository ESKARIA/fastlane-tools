# frozen_string_literal: true

desc 'Upload symbols'
lane :upload_dsyms do |options|
  check_and_set_project_file

  sh('chmod +x ./helper')

  message = "[DEBUG]: Helper path: #{HELPER_PATH}"
  UI.message(message)
  is_metrica = !HELPER_PATH.nil? && !HELPER_PATH.empty?
  if is_metrica
    UI.message('[DEBUG]: Deploy DSYMS to AppMetrica...')
    unzip_and_upload(options)
    sh('ls -a')
  end

  firebase = options[:firebase] ? true : false
  if firebase
    UI.message('[DEBUG]: Deploy DSYMS to Firebase...')
    dsym_paths = []
    UI.message('Start find dsyms files!')
    Find.find('.') do |path|
      dsym_paths << path if path.end_with?('.dSYM.zip')
    end
    upload_symbols_to_crashlytics(dsym_paths: dsym_paths)
  end
end

lane :unzip_and_upload do |_options|
  require 'fileutils'
  require 'find'
  check_and_set_project_file

  sh('pwd')
  sh('ls -a')
  dsym_paths = []
  UI.message('Start search *.dSYM.zip files!')
  Find.find('.') do |path|
    dsym_paths << path if path.end_with?('.dSYM.zip')
  end
  UI.message("We found some path's")
  UI.message(dsym_paths)

  dsym_paths.each do |zip_file|
    if File.exist?(zip_file) # Проверяем, существует ли файл
      UI.message('UnZip archive...')
      sh("unzip -o #{zip_file}")
      UI.message('UnZip complete!')

      UI.message('Use shell script for upload dsyms')
      sh("#{HELPER_PATH} -k #{APPMETRICA_KEY} -v")
      UI.message('dSYM file uploaded!')
    else
      puts "Файл не найден: #{zip_file}"
    end
  end
end
