# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

APP_IDENTIFIER              = ENV['APP_IDENTIFIER']

### Project ###
MAIN_PROJECT_FILE           = ENV['MAIN_TARGET'] + ".xcodeproj"
MAIN_TARGET                 = ENV['MAIN_TARGET']

### Appstore keys ###
APPSTORE_KEY_ID             = ENV['APPSTORE_KEY_ID']
APPSTORE_ISSUER_ID          = ENV['APPSTORE_ISSUER_ID']
APPSTORE_KEY_CONTENT        = ENV['APPSTORE_KEY_CONTENT']

BUILD_NUMBER                = ENV['BUILD_NUMBER']
APPMETRICA_KEY              = ENV['APPMETRICA_KEY']
APPMETRICA_HELPER_PATH      = ENV['APPMETRICA_HELPER_PATH']

DERIVED_PATH                = "build"
CRASHLYTICS_PATH            = "./SourcePackages/checkouts/firebase-ios-sdk/Crashlytics/upload-symbols"

### metadata ###
DATA_META_PATH              = "./fastlane/metadata"
DATA_SCREEN_PATH            = "./fastlane/screenshots"

FILE_NAME                   = "app_" + APP_IDENTIFIER.to_s + "_b_"  + BUILD_NUMBER.to_s + ENV['CI_PIPELINE_IID'].to_s
ARTIFACTS_PATH              = "~/.cache/apps/" + MAIN_TARGET.to_s + "/"

IPA_FILE_NAME               = FILE_NAME.to_s + ".ipa"
DSYM_FILE_NAME              = FILE_NAME.to_s + ".app.dSYM.zip"

IPA_FILE_PATH               = ARTIFACTS_PATH.to_s + "ipa/" + IPA_FILE_NAME.to_s
DSYM_PATH                   = ARTIFACTS_PATH.to_s + "dsyms/" + DSYM_FILE_NAME.to_s

api_key = app_store_connect_api_key(key_id: APPSTORE_KEY_ID,
                                    issuer_id: APPSTORE_ISSUER_ID,
                                    key_content: APPSTORE_KEY_CONTENT,
                                    in_house: false,
                                    is_key_content_base64: true)

import_from_git(
    url: 'git@github.com:ESKARIA/fastlane-tools.git',
    # branch: 'main',
    path: 'fastlane/Fastfile_match', # use any another Fastfile besides fastlane/Fastfile for fix recursive import
    # version: [">= 1.0.0"],
    dependencies: [
      'fastlane/Fastfile_beta',
      'fastlane/Fastfile_tests',
      'fastlane/Fastfile_dsyms',
      'fastlane/Fastfile_upload'
    ],
    # cache_path: "~/.cache/fastlane/imported/"
)

before_all do

    # update_fastlane
    clear_keychain
    if ENV['CI']
        clear_derived_data
        UI.message("Run on remote CI machine")
        clear_derived_data(derived_data_path: DERIVED_PATH)
        
    end
end

after_all do 
    clear_keychain
end

lane :clear_keychain do 
    sh("security default-keychain -d user -s ~/Library/Keychains/login.keychain-db || true")
    sh("security delete-keychain ~/Library/Keychains/fastlane_tmp_keychain-db || true")
    sh("rm -rf ~/Library/MobileDevice/Provisioning\ Profiles/*.mobileprovision || true")
end

# error block is executed when a error occurs
error do |lane, exception, options|
  if is_ci
    UI.message(exception.to_s)
  end
end