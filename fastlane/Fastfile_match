def generate_match(type:, options:, git_branch:)
    app_identifiers = ENV['APP_IDENTIFIER'].split(',')
    api_key = app_store_connect_api_key(
        key_id: APPSTORE_KEY_ID,
        issuer_id: APPSTORE_ISSUER_ID,
        key_content: APPSTORE_KEY_CONTENT,
        in_house: false,
        is_key_content_base64: true
    )

    match(type: type,
            app_identifier: ENV['APP_IDENTIFIER'],
            api_key: api_key,
            force_for_new_devices: true,
            include_all_certificates: true,
            force_for_new_certificates: true,
            readonly: false,
            force: true,
            platform: 'ios',
            verbose: true,
            generate_apple_certs: true,
            git_branch: git_branch)
end

def match_install(type: type, options: options, git_branch: git_branch)
    match(type: type,
            app_identifier: ENV['APP_IDENTIFIER'],
            include_all_certificates: true,
            readonly: true,
            force: false,
            platform: 'ios',
            verbose: true,
            git_branch: git_branch)
end


### Generate match profiles
lane :match_generate_dev do |options|
    generate_match(type: 'development', options: options, git_branch: 'development')
end

lane :match_generate_prod do |options|
    generate_match(type: 'appstore', options: options, git_branch: 'distribution')
end

### Install match certificate and profiles
lane :match_install_dev do |options|
    match_install(type: 'development', options: options, git_branch: 'development')
end

lane :match_install_prod do |options|
    match_install(type: 'appstore', options: options, git_branch: 'distribution')
end
